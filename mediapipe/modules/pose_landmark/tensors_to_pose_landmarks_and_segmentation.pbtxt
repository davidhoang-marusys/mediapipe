# MediaPipe graph for 39-keypoint pose landmark + segmentation (3-output model)
type: "TensorsToPoseLandmarksAndSegmentation"

input_side_packet: "ENABLE_SEGMENTATION:enable_segmentation"
input_stream: "TENSORS:tensors"

output_stream: "LANDMARKS:landmarks"
output_stream: "AUXILIARY_LANDMARKS:auxiliary_landmarks"
output_stream: "SEGMENTATION_MASK:segmentation_mask"

# --- Split outputs (3 tensors) ---
node {
  calculator: "SplitTensorVectorCalculator"
  input_stream: "tensors"
  output_stream: "segmentation_tensor"
  output_stream: "heatmap_tensor"
  output_stream: "pose_flag_tensor"
  output_stream: "landmark_tensor"
  options: {
    [mediapipe.SplitVectorCalculatorOptions.ext] {
      ranges: { begin: 0 end: 1 }
      ranges: { begin: 1 end: 2 }
      ranges: { begin: 2 end: 3 }
      ranges: { begin: 3 end: 4 }
    }
  }
}


# Convert pose flag tensor to float
node {
  calculator: "TensorsToFloatsCalculator"
  input_stream: "TENSORS:pose_flag_tensor"
  output_stream: "FLOAT:pose_presence_score"
}

# Apply threshold to pose flag
node {
  calculator: "ThresholdingCalculator"
  input_stream: "FLOAT:pose_presence_score"
  output_stream: "FLAG:pose_presence"
  options: {
    [mediapipe.ThresholdingCalculatorOptions.ext] {
      threshold: 0.5
    }
  }
}

# Drop tensors if no pose present
node {
  calculator: "GateCalculator"
  input_stream: "landmark_tensor"
  input_stream: "segmentation_tensor"
  input_stream: "ALLOW:pose_presence"
  output_stream: "ensured_landmark_tensor"
  output_stream: "ensured_segmentation_tensor"
}

# --- Landmark decoding ---
node {
  calculator: "TensorsToLandmarksCalculator"
  input_stream: "TENSORS:ensured_landmark_tensor"
  output_stream: "NORM_LANDMARKS:raw_landmarks"
  options: {
    [mediapipe.TensorsToLandmarksCalculatorOptions.ext] {
      num_landmarks: 39
      input_image_width: 256
      input_image_height: 256
      visibility_activation: SIGMOID
    }
  }
}

# Skip RefineLandmarksFromHeatmapCalculator (no heatmap in output)

# Split 39 landmarks: first 33 body, last 6 auxiliary
node {
  calculator: "SplitNormalizedLandmarkListCalculator"
  input_stream: "raw_landmarks"
  output_stream: "landmarks"
  output_stream: "auxiliary_landmarks"
  options: {
    [mediapipe.SplitVectorCalculatorOptions.ext] {
      ranges: { begin: 0 end: 33 }
      ranges: { begin: 33 end: 35 }
    }
  }
}


# --- Optional segmentation decoding ---
node {
  calculator: "GateCalculator"
  input_side_packet: "ALLOW:enable_segmentation"
  input_stream: "ensured_segmentation_tensor"
  output_stream: "enabled_segmentation_tensor"
  options: {
    [mediapipe.GateCalculatorOptions.ext] {
      allow: false
    }
  }
}

node {
  calculator: "TensorsToSegmentationCalculator"
  input_stream: "TENSORS:enabled_segmentation_tensor"
  output_stream: "MASK:segmentation_mask"
  options: {
    [mediapipe.TensorsToSegmentationCalculatorOptions.ext] {
      activation: SIGMOID
      gpu_origin: TOP_LEFT
    }
  }
}